FORMAT: 1A

# Fork

## Users [/users]
### Get current user [GET /users/current]

+ Response 200 (application/json)

    + Attributes (User)
        
### Request guest token [POST /users/guest]

+ Response 201 (application/json)

    + Attributes (object)
        + auth_token: abcdef1234567890 (required)
        + id: 1 (number, required)
        
### Login [POST /users/login]

+ Request

    + Attributes (object)
        + email: juansemilla@gmail.com (required)
        + password: abcdefghi (required)

+ Response 201 (application/json)

    + Attributes (User)
    
+ Response 401 (application/json)

    + Attributes (object)
        + message: La contraseña es inválida o el usuario no existe (required)
        
### Login with facebook [POST /users/login_facebook]

+ Request
    + Attributes (object)
        + email: juansemilla@gmail.com (required)
        + full_name: Juan Semillamanzana (required)
        + facebook_token: b0e89a73ab7d44132dc6125689fbc8b2 (required)

+ Response 201 (application/json)

    + Attributes (User)
    
+ Response 400 (application/json)

    + Attributes (object)
        + errors (array, required) - La llave de cada error debe coincidir con la llave del JSON que se envió
            + facebook_token: El token no es válido

### Register [POST /users/register]

+ Request 

    + Attributes (object)
        + email: juansemilla@gmail.com (required)
        + full_name: Juan Semillamanzana (required)
        + phone_number: +56975385526 (required)
        + password: abcdefghi (required)
        + auth_token: abcdef1234567890 - Solo si se entró como guest inicialmente
        + id: 1 (number) - Solo si se entró como guest inicialmente

+ Response 201 (application/json)

    + Attributes (User)
    
+ Response 400 (application/json)

    + Attributes (object)
        + errors (array, required) - La llave de cada error debe coincidir con la llave del JSON que se envió
            + email: El correo ya está en uso (required)
            + full_name: Nombre no puede ser vacío
            + password: La contraseña debe ser de un largo mínimo de 6 caracteres (required)
        
### Register Device (APNS) [POST /users/apns]

+ Request

    + Attributes (Apns)

+ Response 201 (application/json)

    + Attributes (Apns)
    
+ Response 400 (application/json)

    + Attributes (object)
        + errors (array, required) - La llave de cada error debe coincidir con la llave del JSON que se envió
            + email: El correo ya está en uso (required)
            + facebook_token: El token de facebook no es válido
            + password: La contraseña debe ser de un largo mínimo de 6 caracteres (required)

### Add code (credits) [POST /users/code]

+ Request

    + Attributes (object)
        + code: AB35E8 (required)

+ Response 200 (application/json)

    + Attributes (User)
    
+ Response 404 (application/json)

    + Attributes (object)
        + message: El código ingresado no es válido (required)
        
### Recover Password [POST /users/recover]

+ Request

    + Attributes (object)
        + email: juansemilla@gmail.com (required)

+ Response 200 (application/json)

    + Attributes (object)
        + message: Se han enviado las instrucciones para la recuperación al correo (required)
        
### Logout [DELETE /users/logout]

+ Response 204

## Dishes [/dishes]
### Get dishes for an address [GET /dishes/addresses/{id}]

+ Parameters
    + id: 1 (number, required) - Id de la dirección para la que se solicitan platos

+ Response 200 (application/json)

    + Attributes (object)
        + categories (array[Category], required)
        + selected_address (Address, required)
        + available_schedules (array[Schedule], required)
        + default_schedule (Schedule, required)
        
### Get dishes for a store [GET /dishes/stores/{id}{?kind}]

+ Parameters
    + id: 1 (number, required) - Id de la tienda para la que se solicitan platos
    + kind: 1 (enum[number], required) - Indica si los platos a mostrar son para domicilio o retiro en tienda
        + Members
            + 0 - Despacho
            + 1 - Retiro lo antes posible
            + 2 - Retiro fin de semana

+ Response 200 (application/json)

    + Attributes (object)
        + categories (array[Category], required)
        + selected_store (Store, required)
        + available_schedules (array[Schedule], required)
        + default_schedule (Schedule, required)
        
+ Response 403 (application/json)

    + Attributes (object)
        + message: No estás autorizado a solicitar para retiro (required)
        
### Get dish data [GET /dishes/{id}]

+ Parameters
    + id: 1 (number, required)

+ Response 200 (application/json)

    + Attributes (Dish)
        
## Shoping Cart [/cart]

### Update cart [PATCH /cart]

+ Request

    + Attributes (CartConfig)

+ Response 200 (application/json)

    + Attributes (Cart)

## Orders [/orders]
### Get order list [GET]

+ Response 200 (application/json)

    + Attributes (object)
        + orders (array[Order], required)
        
### Get order data [GET /orders/{id}]

+ Parameters
    + id: 1 (number, required)

+ Response 200 (application/json)

    + Attributes (Order)
        
### Create order [POST /orders]

+ Request
    + Attributes (CartConfig)

+ Response 201 (application/json)

    + Attributes (Order)

### Cancel order [DELETE /orders/{id}]

+ Parameters
    + id: 1 (number, required)

+ Response 204

### Rate order [POST /orders/{id}/rate]

+ Parameters
    + id: 1 (number, required)
    
+ Request
    + Attributes (object)
        + score: 1 (number, required)
        + message_id: 1 (number, required) - Id del mensaje seleccionado

+ Response 200 (application/json)

    + Attributes (Order)
        
### Send details by email [POST /orders/{id}/email_details]

+ Parameters
    + id: 1 (number, required)

+ Response 200 (application/json)

    + Attributes (object)
        + message: Se han enviado los detalles con éxito (required)

## Addresses [/addresses]
### Get address list [GET]

+ Response 200 (application/json)

    + Attributes (object)
        + addresses (array[Address])
        
### Create new address [POST]

+ Request
    + Attributes (object)
        + name: Casa (required)
        + `street_and_number`: Avenida Siempreviva 1234 (required)
        + unit_number: 701 (number, nullable)
        + commune_id: 1 (number, required) - Id de la comuna seleccionada
        + coordinates (Coordinates, required) - Coordenadas de la ubicación

+ Response 201 (application/json)

    + Attributes (Address)
        
### Update address [PATCH /addresses/{id}]

+ Parameters
    + id: 1 (number, required)
    
+ Request
    + Attributes (object)
        + name: Casa (required)
        + `street_and_number`: Avenida Siempreviva 1234 (required)
        + unit_number: 701 (number, nullable)
        + commune_id: 1 (number, required) - Id de la comuna seleccionada
        + coordinates (Coordinates, required) - Coordenadas de la ubicación

+ Response 200 (application/json)

    + Attributes (Address)
        
### Remove address [DELETE /addresses/{id}]

+ Parameters
    + id: 1 (number, required)

+ Response 204

## Communes [/communes]
### Get commune list [GET]

+ Response 200 (application/json)

    + Attributes (object)
        + communes (array[Commune])
        
## Stores [/stores]
### Get store list [GET]

+ Response 200 (application/json)

    + Attributes (object)
        + stores (array[Store], required)

## Payments [/payments]
### Get payment list [GET]

+ Response 200 (application/json)

    + Attributes (object)
        + payments (array[Payment], required)

### Ask for payment registration [POST]

+ Request

    + Attributes (object)
        + email: juansemilla@gmail.com (required)
        + full_name: Juan Semillamanzana (required)
        + card_name: Tarjeta Santander Gold (required)

+ Response 201 (application/json)

    + Attributes (object)
        + url: https://www.tbk.cl/ (required)
        + token: abcdef1234567890 (required)
        
### Remove payment [DELETE /payments/{id}]

+ Parameters
    + id: 1 (number, required)  

+ Response 204 (application/json)

## Ratings [/ratings]

Entrega las distintas opciones que tendrá el usuario para evaluar una orden
### Get rating list [GET]

+ Response 200 (application/json)

    + Attributes (object)
        + ratings (array[object], required) - Listado de posibles evaluaciones y mensajes asociados
            - (object)
                + score (enum[number], required)
                    + Members
                        + 1 - Decepcionante
                        + 2 - 
                        + 3 - 
                        + 4 - 
                        + 5 - Excelente!
                + messages (array[RatingMessage], required)

# Data Structures

## Address (object)
+ id: 1 (number, required)
+ name: Casa (required)
+ `street_and_number`: Avenida Siempreviva 1234 (required)
+ unit_number: 701 (number, nullable)
+ commune (Commune, required)
+ coordinates (Coordinates, required) - Coordenadas de la ubicación
+ delivery_available: true (boolean, required) - Indica si la ubicación tiene delivery disponible o no

## Apns (object)
+ registration_id: abcdef1234567890 (required)
+ device_id: abcdef1234567890 (required)

## Cart (object)
+ items (array[Item], required)
+ kind (enum[number], required) - Tipo de orden
    + Members
        + 0 - Despacho
        + 1 - Retiro
+ address (Address, nullable) - Dirección del usuario, nula a menos que sea despacho
+ store (Store, nullable) - Dirección de la tienda, nula a menos que sea retiro
+ schedule (Schedule, required)
+ payment (Payment, required) - Tipo de pago seleccionado para la compra
+ `credits_to_be_paid`: 5000 (number, required)
+ delivery_price: 2000 (number, required)
+ `amount_to_be_paid`: 25000 (number, required)

## CartConfig (object)
+ items (array[CartItem], required)
+ kind (enum[number], required) - Tipo de orden
    + Members
        + 0 - Despacho
        + 1 - Retiro lo antes posible
        + 2 - Retiro fin de semana
+ address_id: 1 (number, nullable) - id del usuario, nula a menos que sea despacho
+ store_id: 1 (number, nullable) - id de la tienda, nula a menos que sea retiro
+ schedule_id: 1 (number, required)
+ payment_id: 1 (number, required) - id del medio de pago

## CartItem (object)
+ portion_sku: 12 (required)
+ quantity: 1 (number, required)

## Category (object)
+ id: 1 (number, required)
+ name: Almuerzo (required)
+ sections (array[Section], required)

## Comment (object)
+ author_name: Sofía (required)
+ body: Lorem ipsum dolor sit amet (required)
+ avatar_url: static/thumbnail.png (required)

## Commune (object)
+ id: 1 (number, required)
+ name: Santiago (required)

## Coordinates (object)
+ longitude: 33.4163355 (number, required)
+ latitude: 70.5846429 (number, required)

## Dish (object)
+ id: 1 (number, required)
+ title: Asado de tira (required)
+ subtitle: con lentejas al vino tinto (required)
+ thumbnail_url: static/thumbnail.png (required)
+ tags (array[Tag], required)
+ items (array[ItemOffer], required)

## DishFull (Dish)
+ description: Congrio cocido al vapor (required)
+ chef_name: Laurent Pasqualetto (required)
+ chef_comment: Este plato para mi es (required)
+ user_comments (array[Comment], required)
+ image_url: static/full.png (required)

## Geofence (object)
+ polygon_vertices (array[Coordinates], required) - Vertices del polígono, deben venir en orden para poder dibujarlas en el mapa

## Item (object)
+ portion (Portion, required)
+ unit_price: 15000 (number, required)
+ quantity: 10 (number, required)

## ItemOffer (object)
+ portion (Portion, required)
+ unit_price: 15000 (number, required)
+ stock: 10 (number, required)
+ unlimited_stock: true (boolean, required) - Verdadero si tiene stock infinito

## OneClick (object)
+ response_code (string, nullable) - Texto que indica si la transacción se aprobó.
+ authorization_code (number, nullable) - Número de autorización de transbank.
+ card_numbers (number, nullable) - Últimos 4 dígitos de la tarjeta que se usó.
+ card_kind (string, nullable) - Tipo de la tarjeta que se usó. VISA, MASTER CARD, etc.
+ transaction_id (number, nullable) - ID de la transacción del comercio.
+ transaction_date (number, nullable) - Fecha y hora (epoc) de la transacción.
+ payment_kind (string, nullable) - Crédito o débito.

## Order (object)
+ items (array[Item], required)
+ kind (enum[number], required) - Tipo de orden
    + Members
        + 0 - Despacho
        + 1 - Retiro lo antes posible
        + 2 - Retiro fin de semana
+ rating (Rating) - Evaluación del usuario
+ address (Address, nullable) - Dirección del usuario, nula a menos que sea despacho
+ store (Store, nullable) - Dirección de la tienda, nula a menos que sea retiro
+ schedule (Schedule)
+ status (enum[number], required) - Estado de la orden
    + Members
        + 0 - Ingresado
        + 1 - Preparado
        + 2 - En camino
        + 3 - Disponible para retiro
+ payment (Payment, required) - Tipo de pago utilizado para el pedido
+ applied_credits: 5000 (number, required)
+ delivery_price: 2000 (number, required)
+ paid_amount: 25000 (number, required)
+ hash: ABCDEF1234567890 (required) - Hash único para generar el QR
+ delivered_timestamp: 1505499442 (number, nullable) - Fecha y hora (epoch) de la entrega de la orden, nulo si no se ha entregado
+ url: http://payme/now (string, nullable) - Si existe, url a la que se debe redirigir para completar el pago.
+ token: ABCDEF1234567890 (string, nullable) - Si existe url, el token que se debe enviar para completar el pago.
+ one_click (OneClick, nullable) - Información adicional que debe mostrarse luego de una compra por OneClick.

## Payment (object)
+ id: 1 (number, required)
+ email: juansemilla@gmail.com (nullable)
+ full_name: Juan Semillamanzana (nullable)
+ title: Tarjeta Santander (nullable)
+ subtitle: MasterCard terminada en 1234 (nullable)
+ kind (enum[number], required) - Tipo de pago
    + Members
        + 1 - Pago en tienda
        + 2 - Pago contra Entrega
        + 3 - Oneclick
        + 4 - Transbank
+ order_kinds: 0,1,2 (array[number], required) - Para qué tipos de órdenes se puede utilizar el medio de pago (0: Despacho, 1: Retiro lo antes posible, 2: Retiro fin de semana)
+ status: 1 (enum[number], required) - Estado del medio de pago
    + Members
        + 0 - Pendiente
        + 1 - Ok
        + 2 - Rechazado Transbank
        + 3 - Rechazado Fork

## Portion (PortionOffer)
+ dish_name: Asado de tira con lentejas al vino tinto (required)
+ dish_id: 1 (number, required)

## PortionOffer (object)
+ sku: 1 (number, required)
+ kind (enum[number], required) - Tipo de porción
    + Members
        + 0 - Simple
        + 1 - Doble

## Rating (object)
+ score (enum[number], required) - 
    + Members
        + 1 - Decepcionante
        + 2 - 
        + 3 - 
        + 4 - 
        + 5 - Excelente!
+ title: Decepcionante (required) - Nombre a mostrar al seleccionar la nota
+ subtitle: ¿Qué anduvo mal? (nullable) - Título a mostrar para el listado de mensajes
+ message (RatingMessage, nullable) - Mensaje asociado a la evaluación

## RatingMessage (object)
+ id: 1 (number, required)
+ text: Error en el pedido

## Schedule (object)
+ id: 1 (number, required)
+ title: antes de (required)
+ subtitle: 14 hrs (required)

## Section (object)
+ id: 1 (number, required)
+ name: Sugerencias del chef (nullable)
+ dishes (array[Dish], required)

## ServiceHours (object)
+ weekday: Lunes (required)
+ open: `09:00-04:00` (required) - Formato: <Hora><Timezone>
+ close: `21:00-04:00` (required) - Formato: <Hora><Timezone>


## Store (object)
+ id: 1 (number, required)
+ name: Plaza las lilas (required)
+ contact_email: tienda@fork.cl (required)
+ address: Eliodoro Yañez 2876 (required)
+ unit_number (number, nullable)
+ commune (Commune, required)
+ coordinates (Coordinates, required) - Coordenadas de la tienda
+ geofence (Geofence, required) - Polígono de reparto
+ image_url: static/image.png (required)
+ service (array[ServiceHours], required)

## Tag (object)
+ id: 1 (number, required)
+ name: Vegetariano (required)
+ image_url: static/image.png (required)

## User (object)
+ id: 1 (number, required)
+ full_name: Juan Semillamanzana (required)
+ email: juansemilla@gmail.com (required)
+ phone_number: +56975385526 (required)
+ auth_token: abcdef1234567890 (required)
+ facebook_token (nullable)
+ credits: 5000 (number, required) - Créditos disponibles para el usuario
+ free_deliveries: 2 (number, required) - Cantidad de repartos gratis disponibles
+ takeout_able: true (boolean, required) - Se le permite al usuario hacer retiros (reservas) o no.
+ delivery_able: true (boolean, required) - Se le permite al usuario hacer pedidos a domicilio o no.